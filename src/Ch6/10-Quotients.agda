{-# OPTIONS --without-K --exact-split --safe #-}

open import Ch1.Type-theory
open import Ch2.Homotopy-type-theory
open import Ch3.Sets-and-logic
open import Ch4.Equivalences

module Ch6.10-Quotients where


-- Remark 6.10.11 (Definition of ‚Ñ§ via canonical representatives).

r : ‚Ñï √ó ‚Ñï ‚Üí ‚Ñï √ó ‚Ñï
r (zero , zero) = zero , zero
r (succ m , zero) = succ m , zero
r (zero , succ n) = zero , succ n
r (succ m , succ n) = r (m , n)

‚Ñ§·µ£ : ùì§‚ÇÄ Ãá
‚Ñ§·µ£ = Œ£ z Íûâ ‚Ñï √ó ‚Ñï , r z ‚â° z

-- Embedding of ‚Ñï in ‚Ñ§·µ£

nonneg : ‚Ñï ‚Üí ‚Ñ§·µ£
nonneg zero = (zero , zero) , refl _
nonneg (succ n) = (succ n , zero) , refl _

nonpos : ‚Ñï ‚Üí ‚Ñ§·µ£
nonpos zero = (zero , zero) , refl _
nonpos (succ n) = (zero , succ n) , refl _


